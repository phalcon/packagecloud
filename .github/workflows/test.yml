name: First attempt

on:
  push

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: "ubuntu"
            dist: "trusty"
            package: "deb"
            branch: "v4.1.2"
            php: 7.3
            packagecloud_repo: "stable"

          - os: "ubuntu"
            dist: "xenial"
            package: "deb"
            branch: "v4.1.2"
            php: 7.3
            packagecloud_repo: "stable"

          - os: "ubuntu"
            dist: "xenial"
            package: "deb"
            branch: "v4.1.2"
            php: 7.4
            packagecloud_repo: "stable"

    runs-on: ubuntu-18.04

    env:
      OS: ${{ matrix.os }}
      DIST: ${{ matrix.dist }}
      PACKAGE: ${{ matrix.package }}
      CLONE_BRANCH: ${{ matrix.branch }}
      PHP_VERSION: ${{ matrix.php }}
      PACKAGECLOUD_REPO: ${{ matrix.packagecloud_repo }}
      PHP_EXTENSIONS: memcached, psr, redis

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Before install
        run: |
          source environment
          export $(cat environment | grep -v "^#\|^$" | cut -d= -f1)
#          source ci/export-buildtab.sh

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: "phalcon-packagecloud"

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
#          ini-values: apc.enable_cli=on, session.save_path=/tmp
          extensions: ${{ env.PHP_EXTENSIONS }}
#        env:
#          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install
        run: |
          ./ci/install-re2c.sh
          ./ci/install-zephir-parser.sh
          ./ci/install-zephir.sh

      - run: ./ci/regenerate-build.sh

      - run: make -f .travis.mk ${TARGET}
